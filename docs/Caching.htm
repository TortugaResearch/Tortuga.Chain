<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Caching Appenders - Tortuga Chain</title>
    <link rel="shortcut icon" href="favicon.ico">
    <link rel="stylesheet" href="css/theme.css" type="text/css" />
    <link rel="stylesheet" href="css/theme_colors.css" type="text/css" />
    <link rel="stylesheet" href="css/styles/vs.css">
    <link rel="stylesheet" href="css/font-awesome.4.5.0.min.css">
</head>
<body role="document">
    <div class="grid-for-nav">
        <nav data-toggle="nav-shift" class="nav-side stickynav">
            <div class="side-nav-search">
                <a href="index.htm"><i class="fa fa-home"></i> Tortuga Chain</a>
                <div role="search">
                    <form id="search-form" class="form" action="Docnet_search.htm" method="get">
                        <input type="text" name="q" placeholder="Search docs" />
                    </form>
                </div>
            </div>
            <div class="menu menu-vertical" data-spy="affix" role="navigation" aria-label="main navigation">
<ul>
<li class="tocentry"><a href="Introduction.htm">Home</a>
</li>

<li class="tocentry"><a href="DataSources.htm">Data Sources</a>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="CommandBuilders.htm">Command Builders</a></span>
</li>
<li class="tocentry">
<span class="navigationgroup"><i class="fa fa-caret-right"></i> <a href="Materializers.htm">Materializers</a></span>
</li>
<li class="tocentry">
<ul>
<li><span class="navigationgroup"><i class="fa fa-caret-down"></i> <a href="Appenders.htm">Appenders</a></span></li>

<li class="tocentry current"><a class="current" href="Caching.htm">Caching Appenders</a>
<ul class="currentrelative">
<li class="tocentry"><a href="#cache-keys">Cache Keys</a></li>
<li class="tocentry"><a href="#example-of-a-caching-repository">Example of a Caching Repository</a></li>
<li class="tocentry"><a href="#internals">Internals</a></li>
<li class="tocentry"><a href="#roadmap">Roadmap</a></li>
</ul>
<li class="tocentry"><a href="Tracing.htm">Tracing Appenders</a>
</li>
<li class="tocentry"><a href="SqlDependency.htm">Change Notification Appenders</a>
</li>
</ul>
</li>
<li class="tocentry"><a href="AuditRules.htm">Audit Rules</a>
</li>
<li class="tocentry"><a href="RestrictedColumns.htm">Restricted Columns</a>
</li>
<li class="tocentry"><a href="Transactions.htm">Transactions</a>
</li>
<li class="tocentry"><a href="MasterDetail.htm">Master/Detail</a>
</li>
<li class="tocentry"><a href="EntityFramework.htm">Entity Framework Integration</a>
</li>
<li class="tocentry"><a href="NHibernate.htm">NHibernate Integration</a>
</li>
</ul>
				<div class="toc-footer">
					<span class="text-small">
						<hr/>
						<a href="https://github.com/FransBouma/DocNet" target="_blank">Made with <i class="fa fa-github"></i> DocNet</a>
					</span>
				</div>	
			</div>
            &nbsp;
        </nav>
        <section data-toggle="nav-shift" class="nav-content-wrap">
            <nav class="nav-top" role="navigation" aria-label="top navigation">
                <i data-toggle="nav-top" class="fa fa-bars"></i>
                <a href="index.htm">Tortuga Chain</a>
            </nav>
            <div class="nav-content">
                <div role="navigation" aria-label="breadcrumbs navigation">
                    <div class="breadcrumbs">
<ul><li><a href="Introduction.htm">Home</a></li> / <li><a href="Appenders.htm">Appenders</a></li> / <li><a href="Caching.htm">Caching Appenders</a></li></ul>
					
                    </div>
                    <hr />
                </div>
                <div role="main">
                    <div class="section">
<h1 id="caching-appenders">Caching Appenders<a class="headerlink" href="#caching-appenders" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h1>
<ul>
<li><code>.Cache(...)</code></li>
<li><code>.CacheAllItems(...)</code></li>
<li><code>.InvalidateCache(...)</code></li>
<li><code>.ReadOrCache(...)</code></li>
</ul>
<h2 id="cache-keys">Cache Keys<a class="headerlink" href="#cache-keys" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>Cache keys can be provided as a string or a function. In the latter case, the function accepts the result of the chain and returns a string.</p>
<p><code>.CacheAllItems(...)</code> is a special case. It only operates on lists of objects and generates a cache key for each object seperately.</p>
<h2 id="example-of-a-caching-repository">Example of a Caching Repository<a class="headerlink" href="#example-of-a-caching-repository" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>In this example you can see the interplay between caching individual records and caching collections using <code>CacheAllItems</code>.</p>
<pre><code>public class EmployeeCachingRepository
{

    private const string TableName = &quot;HR.Employee&quot;;
    private const string AllCacheKey = &quot;HR.Employee ALL&quot;;

    public IClass1DataSource Source { get; private set; }
    public CachePolicy Policy { get; private set; }

    public EmployeeCachingRepository(ICrudDataSource source, CachePolicy policy = null)
    {
        Source = source;
        Policy = policy;
    }

    protected string CacheKey(int id)
    {
        return $&quot;HR.Employee EmployeeKey={id}&quot;;
    }

    protected string CacheKey(Employee entity)
    {
        return CacheKey(entity.EmployeeKey.Value);
    }

    public Employee Get(int id)
    {
        return Source.GetByKey(TableName, id).ToObject&lt;Employee&gt;().ReadOrCache(CacheKey(id), policy: Policy).Execute();
    }

    public IList&lt;Employee&gt; GetAll()
    {
        return Source.From(TableName).ToCollection&lt;Employee&gt;().CacheAllItems((Employee x) =&gt; CacheKey(x), policy: Policy).ReadOrCache(AllCacheKey, policy: Policy).Execute();
    }

    public Employee Insert(Employee entity)
    {
        return Source.Insert(TableName, entity).ToObject&lt;Employee&gt;().InvalidateCache(AllCacheKey).Cache((Employee x) =&gt; CacheKey(x), policy: Policy).Execute();
    }

    public Employee Update(Employee entity)
    {
        return Source.Update(TableName, entity).ToObject&lt;Employee&gt;().Cache(CacheKey(entity)).InvalidateCache(AllCacheKey).Execute();
    }

    public void Delete(int id)
    {
        Source.DeleteByKey(TableName, id).InvalidateCache(CacheKey(id)).InvalidateCache(AllCacheKey).Execute();
    }
}
</code></pre>

<h2 id="internals">Internals<a class="headerlink" href="#internals" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The caching appenders use the data source to access a cache. Currently that data source is hard-coded to use .NET's built-in <code>MemoryCache</code>.</p>
<h2 id="roadmap">Roadmap<a class="headerlink" href="#roadmap" title="Permalink to this headline"><i class="fa fa-link" aria-hidden="true"></i></a></h2>
<p>The current plan is to allow the caching framework to be swapped out. </p>

                    </div>
                </div>
                <footer>
                    <hr />
                    <div role="contentinfo">
Tortuga Chain. <a href='https://github.com/TortugaResearch/Tortuga.Chain/' target='_blank'>Visit us at GitHub</a>.
                    </div>
                </footer>
            </div>
        </section>
    </div>
    <script src="js/jquery-2.1.1.min.js"></script>
    <script src="js/modernizr-2.8.3.min.js"></script>
    <script src="js/highlight.pack.js"></script>
    <script src="js/theme.js"></script>

</body>
</html>
